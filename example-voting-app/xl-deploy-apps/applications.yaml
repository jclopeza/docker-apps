---
apiVersion: xl-deploy/v1
kind: Applications
spec:
- name: Applications/VoteApp
  type: core.Directory
- name: Applications/VoteApp/Bbdd
  type: udm.Application
- name: Applications/VoteApp/Front
  type: udm.Application
- name: Applications/VoteApp/Worker
  type: udm.Application
- name: Applications/VoteApp/VoteApp
  type: udm.Application

- name: Applications/VoteApp/Bbdd/1.0.0
  type: udm.DeploymentPackage
  deployables:
  - name: db-deployment
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Bbdd/1.0.0/db-deployment/db-deployment.yaml"
  - name: redis-service
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Bbdd/1.0.0/redis-service/redis-service.yaml"
  - name: redis-deployment
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Bbdd/1.0.0/redis-deployment/redis-deployment.yaml"
  - name: db-service
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Bbdd/1.0.0/db-service/db-service.yaml"

- name: Applications/VoteApp/Bbdd/2.0.0
  type: udm.DeploymentPackage
  deployables:
  - name: redis-deployment
    type: k8s.DeploymentSpec
    containers:
    - name: redis-container
      type: k8s.ContainerSpec
      containerName: redis
      image: redis:alpine
      volumeBindings:
      - name: redis-volume
        type: k8s.MountedVolumeSpec
        volumeName: redis-data
        mountPath: /data
    volumes:
    - name: redis-volume
      type: k8s.VolumeSpec
      volumeName: redis-data
      volumeType: emptyDir
    deploymentName: redis
    replicasCount: "1"
    matchLabels:
      app: redis
  - name: db-deployment
    type: k8s.DeploymentSpec
    containers:
    - name: db-container
      type: k8s.ContainerSpec
      containerName: db
      image: postgres:9.4
      volumeBindings:
      - name: db-data
        type: k8s.MountedVolumeSpec
        volumeName: db-data
        mountPath: /var/lib/postgresql/data
    volumes:
    - name: db-volume
      type: k8s.VolumeSpec
      volumeName: db-data
      volumeType: emptyDir
    deploymentName: db
    replicasCount: "1"
    matchLabels:
      app: db
  - name: db-service
    type: k8s.ServiceSpec
    serviceName: db
    serviceType: ClusterIP
    selectors:
      app: db
    ports:
    - name: db-port
      type: k8s.ServicePortSpec
      port: "5432"
      targetPort: "5432"
  - name: redis-service
    type: k8s.ServiceSpec
    serviceName: redis
    serviceType: ClusterIP
    selectors:
      app: redis
    ports:
    - name: redis-port
      type: k8s.ServicePortSpec
      port: "6379"
      targetPort: "6379"

- name: Applications/VoteApp/Front/1.0.0
  type: udm.DeploymentPackage
  deployables:
  - name: result-deployment
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Front/1.0.0/result-deployment/result-deployment.yaml"
  - name: vote-deployment
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Front/1.0.0/vote-deployment/vote-deployment.yaml"
  - name: result-service
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Front/1.0.0/result-service/result-service.yaml"
  - name: vote-service
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Front/1.0.0/vote-service/vote-service.yaml"

- name: Applications/VoteApp/Front/2.0.0
  type: udm.DeploymentPackage
  deployables:
  - name: result-deployment
    type: k8s.DeploymentSpec
    containers:
    - name: result-container
      type: k8s.ContainerSpec
      containerName: result
      image: dockersamples/examplevotingapp_result:before
    deploymentName: result
    replicasCount: "1"
    matchLabels:
      app: result
  - name: vote-deployment
    type: k8s.DeploymentSpec
    containers:
    - name: vote-container
      type: k8s.ContainerSpec
      containerName: vote
      image: dockersamples/examplevotingapp_vote:before
    deploymentName: vote
    replicasCount: "1"
    matchLabels:
      app: vote
  - name: result-service
    type: k8s.ServiceSpec
    serviceName: result
    serviceType: NodePort
    selectors:
      app: result
    ports:
    - name: result-port
      type: k8s.ServicePortSpec
      portName: result-service
      nodePort: "31001"
      port: "5001"
      targetPort: "80"
  - name: vote-service
    type: k8s.ServiceSpec
    serviceName: vote
    serviceType: NodePort
    selectors:
      app: vote
    ports:
    - name: vote-port
      type: k8s.ServicePortSpec
      portName: vote-service
      nodePort: "31000"
      port: "5000"
      targetPort: "80"

- name: Applications/VoteApp/Worker/1.0.0
  type: udm.DeploymentPackage
  deployables:
  - name: worker-deployment
    type: k8s.ResourcesFile
    file: !file "artifacts/Applications/VoteApp/Worker/1.0.0/worker-deployment/worker-deployment.yaml"

- name: Applications/VoteApp/Worker/2.0.0
  type: udm.DeploymentPackage
  deployables:
  - name: worker-deployment
    type: k8s.DeploymentSpec
    containers:
    - name: worker-container
      type: k8s.ContainerSpec
      containerName: worker
      image: dockersamples/examplevotingapp_worker
    deploymentName: worker
    replicasCount: "1"
    matchLabels:
      app: worker

- name: Applications/VoteApp/VoteApp/1.0.0
  type: udm.CompositePackage
  orchestrator:
  - sequential-by-composite-package
  packages:
  - Applications/VoteApp/Bbdd/1.0.0
  - Applications/VoteApp/Front/1.0.0
  - Applications/VoteApp/Worker/1.0.0

- name: Applications/VoteApp/VoteApp/2.0.0
  type: udm.CompositePackage
  orchestrator:
  - sequential-by-composite-package
  packages:
  - Applications/VoteApp/Bbdd/2.0.0
  - Applications/VoteApp/Front/2.0.0
  - Applications/VoteApp/Worker/2.0.0
